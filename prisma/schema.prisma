// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  age          Int
  name         String
  email        String
  role         Role     @default(BASIC)
  preferences  Json
  writtenPosts Post[]  @relation("WrittenPosts")
  favPosts     Post[]  @relation("FavPosts")
  userPreferences UserPreferences?

  @@unique([age, name])
  @@index([email])
}

model UserPreferences{
  id       String   @id @default(uuid())
  emailUpdates Boolean
  user   User     @relation(fields: [userId], references: [id])
  userId String   @unique
}

model Post {
  id         String     @id @default(uuid())
  title      String
  averageRating Float
  rating     Float
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  authorId   String
  author     User       @relation("WrittenPosts", fields: [authorId], references: [id])
  favById    String?
  favBy      User?      @relation("FavPosts", fields: [favById], references: [id])
  categories Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role{
  BASIC
  ADMIN
}
